/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-12-14 20:53:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class muutaasiakas_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<script src=\"scripts/main.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n");
      out.write("<title>Muuta asiakkaan tiedot</title>\n");
      out.write("</head>\n");
      out.write("<body onkeydown=\"tutkiKey(event)\">\n");
      out.write("<form id=\"tiedot\">\n");
      out.write("    <table>\n");
      out.write("        <thead>\n");
      out.write("            <tr>\n");
      out.write("                <th colspan=\"3\" id=\"ilmo\"></th>\n");
      out.write("                <th colspan=\"2\" class=\"oikealle\"><a href=\"listaaasiakkaat.jsp\">Takaisin listaukseen</a></th>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th>Etunimi</th>\n");
      out.write("                <th>Sukunimi</th>\n");
      out.write("                <th>Puhelin</th>\n");
      out.write("                <th>Sähköposti</th>\n");
      out.write("                <th></th>\n");
      out.write("            </tr>\n");
      out.write("        </thead>\n");
      out.write("        <tbody>\n");
      out.write("            <tr>\n");
      out.write("                <td><input type=\"text\" name=\"etunimi\" id=\"etunimi\"></td>\n");
      out.write("                <td><input type=\"text\" name=\"sukunimi\" id=\"sukunimi\"></td>\n");
      out.write("                <td><input type=\"text\" name=\"puhelin\" id=\"puhelin\"></td>\n");
      out.write("                <td><input type=\"text\" name=\"sposti\" id=\"sposti\"></td>\n");
      out.write("                <td><input type=\"button\" name=\"nappi\" id=\"tallenna\" value=\"Tallenna\" onclick=\"paivitaTiedot()\"></td>\n");
      out.write("            </tr>    \n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("    <input type=\"hidden\" name=\"asiakas_id\" id=\"asiakas_id\">\n");
      out.write("</form>\n");
      out.write("<span id=\"ilmo\"></span>\n");
      out.write("<script>\n");
      out.write("function tutkiKey(event) {\n");
      out.write("    if (event.keyCode == 13) {\n");
      out.write("        paivitaTiedot();\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("document.getElementById(\"etunimi\").focus();\n");
      out.write("\n");
      out.write("var asiakas_id = requestURLParam(\"asiakas_id\");\n");
      out.write("fetch(\"asiakkaat/haeyksi/\" + asiakas_id, {\n");
      out.write("    method: 'GET'\n");
      out.write("})\n");
      out.write(".then( function (response) {\n");
      out.write("    return response.json()\n");
      out.write("})\n");
      out.write(".then( function (responseJson) {\n");
      out.write("    document.getElementById(\"etunimi\").value = responseJson.etunimi;\t\t\n");
      out.write("\tdocument.getElementById(\"sukunimi\").value = responseJson.sukunimi;\t\n");
      out.write("\tdocument.getElementById(\"puhelin\").value = responseJson.puhelin;\t\n");
      out.write("\tdocument.getElementById(\"sposti\").value = responseJson.sposti;\t\n");
      out.write("\tdocument.getElementById(\"asiakas_id\").value = responseJson.asiakas_id;\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("function paivitaTiedot() {\n");
      out.write("    var ilmo = \"\";\n");
      out.write("    var etunimi = document.getElementById(\"etunimi\").value;\n");
      out.write("\tvar sukunimi = document.getElementById(\"sukunimi\").value;\n");
      out.write("\tvar puhelin = document.getElementById(\"puhelin\").value;\n");
      out.write("    var sposti = document.getElementById(\"sposti\").value;\n");
      out.write("\n");
      out.write("    if (document.getElementById(\"etunimi\").value.length < 1) {\n");
      out.write("        ilmo = \"Etunimi on liian lyhyt!\";\n");
      out.write("    } else if (document.getElementById(\"sukunimi\").value.length < 1) {\n");
      out.write("        ilmo = \"Sukunimi on liian lyhyt!\";\n");
      out.write("    } else if (document.getElementById(\"puhelin\").value.length < 4) {\n");
      out.write("        ilmo = \"Puhelinnumero on liian lyhyt!\";\n");
      out.write("    } else if (document.getElementById(\"sposti\").value.length < 6) {\n");
      out.write("        ilmo = \"Sähköpostiosoite on liian lyhyt!\";\n");
      out.write("    }\n");
      out.write("    if (ilmo != \"\") {\n");
      out.write("        document.getElementById(\"ilmo\").innerHTML = ilmo;\n");
      out.write("        setTimeout(function() { document.getElementById(\"ilmo\").innerHTML = \"\"; }, 3000);\n");
      out.write("        return;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    document.getElementById(\"etunimi\").value = siivoa(document.getElementById(\"etunimi\").value);\n");
      out.write("    document.getElementById(\"sukunimi\").value = siivoa(document.getElementById(\"sukunimi\").value);\n");
      out.write("    document.getElementById(\"puhelin\").value = siivoa(document.getElementById(\"puhelin\").value);\n");
      out.write("    document.getElementById(\"sposti\").value = siivoa(document.getElementById(\"sposti\").value);\n");
      out.write("\n");
      out.write("    var formJsonStr = formDataToJSON(document.getElementById(\"tiedot\"));\n");
      out.write("\n");
      out.write("    fetch(\"asiakkaat\",{\n");
      out.write("\t      method: 'PUT',\n");
      out.write("\t      body: formJsonStr\n");
      out.write("\t    })\n");
      out.write("\t.then( function (response) {\n");
      out.write("\t\treturn response.json();\n");
      out.write("\t})\n");
      out.write("\t.then( function (responseJson) {\n");
      out.write("\t\tvar vastaus = responseJson.response;\t\t\n");
      out.write("\t\tif (vastaus == 0) {\n");
      out.write("\t\t\tdocument.getElementById(\"ilmo\").innerHTML= \"Asiakkaan päivittäminen epäonnistui.\";\n");
      out.write("        } else if (vastaus == 1) {\t        \t\n");
      out.write("        \tdocument.getElementById(\"ilmo\").innerHTML= \"Asiakkaan päivittäminen onnistui.\";\t\t\t      \t\n");
      out.write("\t\t}\t\n");
      out.write("\t});\t\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
